name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["dev", "test", "uat", "prod", "main"]
    types: [opened, synchronize, reopened]
    paths-ignore: ["docs/**", ".github/**", "terraform/**"]

  push:
    branches: ["dev", "test", "uat", "prod", "main"]
    paths-ignore: ["docs/**", ".github/**", "terraform/**"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pytest:
    runs-on: ubuntu-latest
    container: python:3.11

#    services:
#      postgres:
#        credentials:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#          POSTGRES_USER: postgres
#          PGDATA: /var/lib/postgresql/data/pgdata

#    env:
#      # postgres://user:password@host:port/database
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_ENGINE: django.db.backends.postgresql
#      POSTGRES_DB: postgres
#      POSTGRES_USER: postgres
#      POSTGRES_HOST: postgres
#      POSTGRES_PORT: 5432
#      DJANGO_SETTINGS_MODULE: config.settings.production
#      DJANGO_AWS_ACCESS_KEY_ID: ${{secrets.DJANGO_AWS_ACCESS_KEY_ID}}
#      DJANGO_AWS_SECRET_ACCESS_KEY: ${{secrets.DJANGO_AWS_SECRET_ACCESS_KEY}}
#      DJANGO_AWS_STORAGE_BUCKET_NAME: nonprod-ci-media
#      DJANGO_AWS_S3_REGION_NAME: ap-northeast-1
#      DJANGO_ADMIN_URL: admin/

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          pip install -r requirements/ci.txt

#      - uses: actions/cache@v3
#        with:
#          path: ~/.cache/pre-commit
#          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pre-commit-
#
#      - name: Run Linters and Checks
#        run: |
#          pre-commit run --all
#        if: ${{ always() }}

      - name: Migrate database
        run: |
          python manage.py migrate --noinput

#      - name: Test with pytest
#        run: |
#          pytest --cov --cov-fail-under=50 --junitxml=junit/test-results.xml

      # Publish coverage and test results
#      - uses: actions/upload-artifact@v3
#        with:
#          name: pytest-results
#          path: junit/test-results.xml
#        if: ${{ always() }}
